status_lib = {'1': 'Выполнено', '2': 'В процессе',
              '3': 'Отложено'}  # Создаем словарь с возможными статусами заметок и ключами

status = status_lib.get('2')  # Задаем первоначальный статус
print('Текущий статус заметки:', status)  # Выводим первоначальный статус

while 1 < 2:  # Создаем цикл со 100% выполняемым условием
    ans = input('Изменить статус заметки? (Да или Нет):')  # Запрос пользователю об изменении статуса
    if ans == "Да":  # Условие для положительного ответа пользователя
        while 2 < 3:  # Создаем цикл со 100% выполняемым условием
            status_num = input(
                'Выберите новый статус заметки из списка (число): '
                '1.Выполнено. 2.В процессе. 3.Отложено.')  # Запрос к пользователю с предлагаемыми статусами
            if status_num == '1' or status_num == '2' or status_num == '3':  # Проверка на корректность ввода
                status = status_lib.get(status_num)  # Передача введенных данных переменной статус из словаря
                status_lib['4'] = status  # Сохранение текущего статуса в словаре
                print("Текущий статус заметки:", status)  # Вывод обновленного статуса
                break  # Окончание цикла
            else:  # Условие для некорректного значения ввода пользователя
                print("Неверный запрос. Повторите попытку.")  # Вывод о некорректном значении
        break  # Окончание цикла    
    elif ans == "Нет":  # Условие для отрицательного ответа от пользователя
        print("Сохранён текущий статус:", status)  # Вывод об сохраненном статусе
        break  # Окончание цикла
    else:  # Условие для некорректного значения ввода пользователя
        print("Неверный запрос. Повторите попытку.")  # Вывод о некорректном значении
